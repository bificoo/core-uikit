'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _arrayPush = require('./_arrayPush.js');
var _getPrototype = require('./_getPrototype.js');
var _getSymbols = require('./_getSymbols.js');
var stubArray$1 = require('./stubArray.js');

var arrayPush = _arrayPush['default'],
    getPrototype = _getPrototype['default'],
    getSymbols = _getSymbols['default'],
    stubArray = stubArray$1['default'];

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

var _getSymbolsIn = getSymbolsIn;

exports['default'] = _getSymbolsIn;
