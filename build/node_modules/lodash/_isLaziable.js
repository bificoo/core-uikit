'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _LazyWrapper = require('./_LazyWrapper.js');
var _getData = require('./_getData.js');
var _getFuncName = require('./_getFuncName.js');
var wrapperLodash = require('./wrapperLodash.js');

var LazyWrapper = _LazyWrapper['default'],
    getData = _getData['default'],
    getFuncName = _getFuncName['default'],
    lodash = wrapperLodash['default'];

/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
  var funcName = getFuncName(func),
      other = lodash[funcName];

  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData(other);
  return !!data && func === data[0];
}

var _isLaziable = isLaziable;

exports['default'] = _isLaziable;
