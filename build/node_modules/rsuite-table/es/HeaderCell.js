'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('../../@babel/runtime/helpers/esm/extends.js');
var objectWithoutPropertiesLoose = require('../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js');
var inheritsLoose = require('../../@babel/runtime/helpers/esm/inheritsLoose.js');
var React = require('react');
var index = require('../../prop-types/index.js');
var cx = require('classnames');
var ColumnResizeHandler = require('./ColumnResizeHandler.js');
var prefix = require('./utils/prefix.js');
var isNullOrUndefined = require('./utils/isNullOrUndefined.js');
var getUnhandledProps = require('./utils/getUnhandledProps.js');
require('../../lodash/isPlainObject.js');
require('../../lodash/_baseGetTag.js');
require('../../lodash/_stringToPath.js');
require('../../lodash/_baseToString.js');
require('./ColumnGroup.js');
require('../../dom-lib/es/animation/cancelAnimationFramePolyfill.js');
require('../../dom-lib/es/animation/nativeRequestAnimationFrame.js');
require('../../dom-lib/es/animation/requestAnimationFramePolyfill.js');
require('../../dom-lib/es/transition/translateDOMPositionXY.js');
require('../../dom-lib/es/getVendorPrefixedName.js');
require('../../dom-lib/es/utils/emptyFunction.js');
require('../../dom-lib/es/normalizeWheel.js');
require('./utils/translateDOMPositionXY.js');
require('../../lodash/intersection.js');
require('../../dom-lib/lib/animation/requestAnimationFramePolyfill.js');
require('../../dom-lib/lib/animation/cancelAnimationFramePolyfill.js');
var Cell = require('./Cell.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () {
            return e[k];
          }
        });
      }
    });
  }
  n['default'] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var propTypes = {
  index: index['default'].number,
  sortColumn: index['default'].string,
  sortType: index['default'].oneOf(['desc', 'asc']),
  sortable: index['default'].bool,
  resizable: index['default'].bool,
  onColumnResizeStart: index['default'].func,
  onColumnResizeEnd: index['default'].func,
  onResize: index['default'].func,
  onColumnResizeMove: index['default'].func,
  onSortColumn: index['default'].func,
  flexGrow: index['default'].number,
  fixed: index['default'].oneOfType([index['default'].bool, index['default'].oneOf(['left', 'right'])]),
  children: index['default'].node
};

var HeaderCell = /*#__PURE__*/function (_React$PureComponent) {
  inheritsLoose['default'](HeaderCell, _React$PureComponent);

  HeaderCell.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
    if (nextProps.width !== prevState.width || nextProps.flexGrow !== prevState.flexGrow) {
      return {
        width: nextProps.width,
        flexGrow: nextProps.flexGrow,
        columnWidth: isNullOrUndefined['default'](nextProps.flexGrow) ? nextProps.width : 0
      };
    }

    return null;
  };

  function HeaderCell(props) {
    var _this;

    _this = _React$PureComponent.call(this, props) || this;

    _this.handleColumnResizeStart = function () {
      var _this$props = _this.props,
          left = _this$props.left,
          fixed = _this$props.fixed,
          onColumnResizeStart = _this$props.onColumnResizeStart;
      onColumnResizeStart === null || onColumnResizeStart === void 0 ? void 0 : onColumnResizeStart(_this.state.columnWidth, left, !!fixed);
    };

    _this.handleColumnResizeEnd = function (columnWidth, cursorDelta) {
      var _this$props2 = _this.props,
          dataKey = _this$props2.dataKey,
          index = _this$props2.index,
          onColumnResizeEnd = _this$props2.onColumnResizeEnd,
          onResize = _this$props2.onResize;

      _this.setState({
        columnWidth: columnWidth
      });

      onColumnResizeEnd === null || onColumnResizeEnd === void 0 ? void 0 : onColumnResizeEnd(columnWidth, cursorDelta, dataKey, index);
      onResize === null || onResize === void 0 ? void 0 : onResize(columnWidth, dataKey);
    };

    _this.handleClick = function () {
      if (_this.props.sortable) {
        var _this$props$onSortCol, _this$props3;

        (_this$props$onSortCol = (_this$props3 = _this.props).onSortColumn) === null || _this$props$onSortCol === void 0 ? void 0 : _this$props$onSortCol.call(_this$props3, _this.props.dataKey);
      }
    };

    _this.addPrefix = function (name) {
      return prefix.prefix(_this.props.classPrefix)(name);
    };

    _this.state = {
      width: props.width,
      flexGrow: props.flexGrow,
      columnWidth: isNullOrUndefined['default'](props.flexGrow) ? props.width : 0
    };
    return _this;
  }

  var _proto = HeaderCell.prototype;

  _proto.renderResizeSpanner = function renderResizeSpanner() {
    var _this$props4 = this.props,
        resizable = _this$props4.resizable,
        left = _this$props4.left,
        onColumnResizeMove = _this$props4.onColumnResizeMove,
        fixed = _this$props4.fixed,
        headerHeight = _this$props4.headerHeight;
    var columnWidth = this.state.columnWidth;

    if (!resizable) {
      return null;
    }

    return /*#__PURE__*/React__namespace.createElement(ColumnResizeHandler['default'], {
      defaultColumnWidth: columnWidth,
      key: columnWidth,
      columnLeft: left,
      columnFixed: fixed,
      height: headerHeight ? headerHeight - 1 : undefined,
      onColumnResizeMove: onColumnResizeMove,
      onColumnResizeStart: this.handleColumnResizeStart,
      onColumnResizeEnd: this.handleColumnResizeEnd
    });
  };

  _proto.renderSortColumn = function renderSortColumn() {
    var _this$props5 = this.props,
        sortable = _this$props5.sortable,
        sortColumn = _this$props5.sortColumn,
        _this$props5$sortType = _this$props5.sortType,
        sortType = _this$props5$sortType === void 0 ? '' : _this$props5$sortType,
        dataKey = _this$props5.dataKey,
        groupHeader = _this$props5.groupHeader;

    if (sortable && !groupHeader) {
      var _classNames;

      var iconClasses = cx__default['default'](this.addPrefix('icon-sort'), (_classNames = {}, _classNames[this.addPrefix("icon-sort-" + sortType)] = sortColumn === dataKey, _classNames));
      return /*#__PURE__*/React__namespace.createElement("span", {
        className: this.addPrefix('sort-wrapper')
      }, /*#__PURE__*/React__namespace.createElement("i", {
        className: iconClasses
      }));
    }

    return null;
  };

  _proto.render = function render() {
    var _classNames2;

    var _this$props6 = this.props,
        className = _this$props6.className,
        width = _this$props6.width,
        dataKey = _this$props6.dataKey,
        headerHeight = _this$props6.headerHeight,
        children = _this$props6.children,
        left = _this$props6.left,
        sortable = _this$props6.sortable,
        classPrefix = _this$props6.classPrefix,
        sortColumn = _this$props6.sortColumn,
        sortType = _this$props6.sortType,
        groupHeader = _this$props6.groupHeader,
        rest = objectWithoutPropertiesLoose['default'](_this$props6, ["className", "width", "dataKey", "headerHeight", "children", "left", "sortable", "classPrefix", "sortColumn", "sortType", "groupHeader"]);

    var classes = cx__default['default'](classPrefix, className, (_classNames2 = {}, _classNames2[this.addPrefix('sortable')] = sortable, _classNames2));
    var unhandledProps = getUnhandledProps['default'](propTypes, rest);
    var ariaSort;

    if (sortColumn === dataKey) {
      ariaSort = 'other';

      if (sortType === 'asc') {
        ariaSort = 'ascending';
      } else if (sortType === 'desc') {
        ariaSort = 'descending';
      }
    }

    return /*#__PURE__*/React__namespace.createElement("div", {
      className: classes
    }, /*#__PURE__*/React__namespace.createElement(Cell['default'], _extends['default']({
      "aria-sort": ariaSort
    }, unhandledProps, {
      width: width,
      dataKey: dataKey,
      left: left,
      headerHeight: headerHeight,
      isHeaderCell: true,
      onClick: !groupHeader ? this.handleClick : null
    }), children, this.renderSortColumn()), this.renderResizeSpanner());
  };

  return HeaderCell;
}(React__namespace.PureComponent);

HeaderCell.propTypes = propTypes;
HeaderCell.defaultProps = {
  classPrefix: prefix.defaultClassPrefix('table-cell-header')
};

exports['default'] = HeaderCell;
