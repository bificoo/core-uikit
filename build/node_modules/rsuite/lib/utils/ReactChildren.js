'use strict';

var ReactChildren = require('../../../../_virtual/ReactChildren.js_commonjs-exports');
require('../../../@babel/runtime/helpers/interopRequireWildcard.js');
require('../../../@babel/runtime/helpers/interopRequireDefault.js');
require('../../../@babel/runtime/helpers/extends.js');
var React$1 = require('react');
var _extends = require('../../../../_virtual/extends.js_commonjs-module');
var interopRequireWildcard = require('../../../../_virtual/interopRequireWildcard.js_commonjs-module');
var interopRequireDefault = require('../../../../_virtual/interopRequireDefault.js_commonjs-module');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React$1);

var _interopRequireWildcard = interopRequireWildcard.interopRequireWildcard.exports;

var _interopRequireDefault = interopRequireDefault.interopRequireDefault.exports;

ReactChildren.__exports.__esModule = true;
ReactChildren.__exports.find = find;
ReactChildren.__exports.map = map;
ReactChildren.__exports.mapCloneElement = mapCloneElement;
ReactChildren.__exports.count = count;
ReactChildren.__exports.default = void 0;

var _extends2 = _interopRequireDefault(_extends._extends.exports);

var React = _interopRequireWildcard(React__default['default']);

function find(children, func, context) {
  var index = 0;
  var result;
  React.Children.forEach(children, function (child) {
    if (result) {
      return;
    }

    index += 1;

    if (func.call(context, child, index)) {
      result = child;
    }
  });
  return result;
}

function map(children, func, context) {
  var index = 0;
  return React.Children.map(children, function (child) {
    if (!React.isValidElement(child)) {
      return child;
    }

    var handle = func.call(context, child, index);
    index += 1;
    return handle;
  });
}

function mapCloneElement(children, func, context) {
  return map(children, function (child, index) {
    return React.cloneElement(child, (0, _extends2.default)({
      key: index
    }, func(child, index)));
  }, context);
}

function count(children) {
  return React.Children.count(Array.isArray(children) ? children.filter(function (child) {
    return child;
  }) : children);
}

function some(children, func, context) {
  var index = 0;
  var result = false;
  React.Children.forEach(children, function (child) {
    if (result) {
      return;
    }

    if (!React.isValidElement(child)) {
      return;
    }
    /* eslint-disable */


    if (func.call(context, child, index += 1)) {
      result = true;
    }
  });
  return result;
}

var _default = {
  mapCloneElement: mapCloneElement,
  count: count,
  some: some,
  map: map,
  find: find
};
ReactChildren.__exports.default = _default;
